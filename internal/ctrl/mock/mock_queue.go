// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/tjjh89017/stunmesh-go/internal/ctrl (interfaces: RefreshQueue)
//
// Generated by this command:
//
//	mockgen -destination=./mock/mock_queue.go -package=mock_ctrl . RefreshQueue
//

// Package mock_ctrl is a generated GoMock package.
package mock_ctrl

import (
	reflect "reflect"

	entity "github.com/tjjh89017/stunmesh-go/internal/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockRefreshQueue is a mock of RefreshQueue interface.
type MockRefreshQueue struct {
	ctrl     *gomock.Controller
	recorder *MockRefreshQueueMockRecorder
}

// MockRefreshQueueMockRecorder is the mock recorder for MockRefreshQueue.
type MockRefreshQueueMockRecorder struct {
	mock *MockRefreshQueue
}

// NewMockRefreshQueue creates a new mock instance.
func NewMockRefreshQueue(ctrl *gomock.Controller) *MockRefreshQueue {
	mock := &MockRefreshQueue{ctrl: ctrl}
	mock.recorder = &MockRefreshQueueMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRefreshQueue) EXPECT() *MockRefreshQueueMockRecorder {
	return m.recorder
}

// Enqueue mocks base method.
func (m *MockRefreshQueue) Enqueue(arg0 entity.PeerId) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Enqueue", arg0)
}

// Enqueue indicates an expected call of Enqueue.
func (mr *MockRefreshQueueMockRecorder) Enqueue(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Enqueue", reflect.TypeOf((*MockRefreshQueue)(nil).Enqueue), arg0)
}
