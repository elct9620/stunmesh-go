// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/tjjh89017/stunmesh-go/internal/repo (interfaces: WireGuardClient)
//
// Generated by this command:
//
//	mockgen -destination=./mock/mock_api.go -package=mock_repo . WireGuardClient
//

// Package mock_repo is a generated GoMock package.
package mock_repo

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	wgtypes "golang.zx2c4.com/wireguard/wgctrl/wgtypes"
)

// MockWireGuardClient is a mock of WireGuardClient interface.
type MockWireGuardClient struct {
	ctrl     *gomock.Controller
	recorder *MockWireGuardClientMockRecorder
}

// MockWireGuardClientMockRecorder is the mock recorder for MockWireGuardClient.
type MockWireGuardClientMockRecorder struct {
	mock *MockWireGuardClient
}

// NewMockWireGuardClient creates a new mock instance.
func NewMockWireGuardClient(ctrl *gomock.Controller) *MockWireGuardClient {
	mock := &MockWireGuardClient{ctrl: ctrl}
	mock.recorder = &MockWireGuardClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWireGuardClient) EXPECT() *MockWireGuardClientMockRecorder {
	return m.recorder
}

// Device mocks base method.
func (m *MockWireGuardClient) Device(arg0 string) (*wgtypes.Device, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Device", arg0)
	ret0, _ := ret[0].(*wgtypes.Device)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Device indicates an expected call of Device.
func (mr *MockWireGuardClientMockRecorder) Device(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Device", reflect.TypeOf((*MockWireGuardClient)(nil).Device), arg0)
}
